// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.3
// source: member/v1/member.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{0}
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{1}
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarPath string `protobuf:"bytes,2,opt,name=avatarPath,proto3" json:"avatarPath,omitempty"`
	NickName   string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Phone      string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequest) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

func (x *UpdateRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *UpdateRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{3}
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{4}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{5}
}

func (x *GetRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{6}
}

func (x *ListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type DataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Data  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataReply) Reset() {
	*x = DataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReply) ProtoMessage() {}

func (x *DataReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReply.ProtoReflect.Descriptor instead.
func (*DataReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{7}
}

func (x *DataReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DataReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DataReply) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AvatarPath      string `protobuf:"bytes,2,opt,name=avatarPath,proto3" json:"avatarPath,omitempty"`
	NickName        string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	Phone           string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Type            int32  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Status          int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	NeedUpdate      bool   `protobuf:"varint,7,opt,name=needUpdate,proto3" json:"needUpdate,omitempty"`
	HasNoReadNotice bool   `protobuf:"varint,8,opt,name=hasNoReadNotice,proto3" json:"hasNoReadNotice,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{8}
}

func (x *Data) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Data) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

func (x *Data) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *Data) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Data) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Data) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Data) GetNeedUpdate() bool {
	if x != nil {
		return x.NeedUpdate
	}
	return false
}

func (x *Data) GetHasNoReadNotice() bool {
	if x != nil {
		return x.HasNoReadNotice
	}
	return false
}

type MyPackageCardDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MyPackageCardData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MyPackageCardDataReply) Reset() {
	*x = MyPackageCardDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPackageCardDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPackageCardDataReply) ProtoMessage() {}

func (x *MyPackageCardDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPackageCardDataReply.ProtoReflect.Descriptor instead.
func (*MyPackageCardDataReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{9}
}

func (x *MyPackageCardDataReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MyPackageCardDataReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MyPackageCardDataReply) GetData() *MyPackageCardData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MyPackageCardDataListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string               `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*MyPackageCardData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MyPackageCardDataListReply) Reset() {
	*x = MyPackageCardDataListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPackageCardDataListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPackageCardDataListReply) ProtoMessage() {}

func (x *MyPackageCardDataListReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPackageCardDataListReply.ProtoReflect.Descriptor instead.
func (*MyPackageCardDataListReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{10}
}

func (x *MyPackageCardDataListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MyPackageCardDataListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MyPackageCardDataListReply) GetData() []*MyPackageCardData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MyPackageCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId              int64   `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	ActualAmount          float32 `protobuf:"fixed32,3,opt,name=actualAmount,proto3" json:"actualAmount,omitempty"`
	RemainMinute          int32   `protobuf:"varint,4,opt,name=remainMinute,proto3" json:"remainMinute,omitempty"`
	RemainDay             int32   `protobuf:"varint,5,opt,name=remainDay,proto3" json:"remainDay,omitempty"`
	MinutePer             int32   `protobuf:"varint,6,opt,name=minutePer,proto3" json:"minutePer,omitempty"`
	MinuteMax             int32   `protobuf:"varint,7,opt,name=minuteMax,proto3" json:"minuteMax,omitempty"`
	MinuteMin             int32   `protobuf:"varint,8,opt,name=minuteMin,proto3" json:"minuteMin,omitempty"`
	Status                int32   `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	TypeChannel           int32   `protobuf:"varint,10,opt,name=typeChannel,proto3" json:"typeChannel,omitempty"`
	ActiveAt              string  `protobuf:"bytes,11,opt,name=activeAt,proto3" json:"activeAt,omitempty"`
	InvalidAt             string  `protobuf:"bytes,12,opt,name=invalidAt,proto3" json:"invalidAt,omitempty"`
	PackageId             int64   `protobuf:"varint,13,opt,name=packageId,proto3" json:"packageId,omitempty"`
	PackageName           string  `protobuf:"bytes,14,opt,name=packageName,proto3" json:"packageName,omitempty"`
	TypePackage           int32   `protobuf:"varint,15,opt,name=typePackage,proto3" json:"typePackage,omitempty"`
	TypeCard              int32   `protobuf:"varint,16,opt,name=typeCard,proto3" json:"typeCard,omitempty"`
	TypeSale              int32   `protobuf:"varint,17,opt,name=typeSale,proto3" json:"typeSale,omitempty"`
	Price                 float32 `protobuf:"fixed32,18,opt,name=price,proto3" json:"price,omitempty"`
	OriPrice              float32 `protobuf:"fixed32,19,opt,name=oriPrice,proto3" json:"oriPrice,omitempty"`
	UseShop               string  `protobuf:"bytes,20,opt,name=useShop,proto3" json:"useShop,omitempty"`
	UseSeat               string  `protobuf:"bytes,21,opt,name=useSeat,proto3" json:"useSeat,omitempty"`
	UseTime               string  `protobuf:"bytes,22,opt,name=useTime,proto3" json:"useTime,omitempty"`
	UseBalance            int32   `protobuf:"varint,23,opt,name=useBalance,proto3" json:"useBalance,omitempty"`
	ValidDay              int32   `protobuf:"varint,24,opt,name=validDay,proto3" json:"validDay,omitempty"`
	ActiveLimit           int32   `protobuf:"varint,25,opt,name=activeLimit,proto3" json:"activeLimit,omitempty"`
	Sort                  int32   `protobuf:"varint,26,opt,name=sort,proto3" json:"sort,omitempty"`
	Remark                string  `protobuf:"bytes,27,opt,name=remark,proto3" json:"remark,omitempty"`
	CreatedAt             string  `protobuf:"bytes,28,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	CanBookingToCloseTime bool    `protobuf:"varint,29,opt,name=canBookingToCloseTime,proto3" json:"canBookingToCloseTime,omitempty"`
	CanBookingToHour      string  `protobuf:"bytes,30,opt,name=canBookingToHour,proto3" json:"canBookingToHour,omitempty"`
	UseShopId             []int32 `protobuf:"varint,31,rep,packed,name=useShopId,proto3" json:"useShopId,omitempty"`
}

func (x *MyPackageCardData) Reset() {
	*x = MyPackageCardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyPackageCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyPackageCardData) ProtoMessage() {}

func (x *MyPackageCardData) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyPackageCardData.ProtoReflect.Descriptor instead.
func (*MyPackageCardData) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{11}
}

func (x *MyPackageCardData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyPackageCardData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MyPackageCardData) GetActualAmount() float32 {
	if x != nil {
		return x.ActualAmount
	}
	return 0
}

func (x *MyPackageCardData) GetRemainMinute() int32 {
	if x != nil {
		return x.RemainMinute
	}
	return 0
}

func (x *MyPackageCardData) GetRemainDay() int32 {
	if x != nil {
		return x.RemainDay
	}
	return 0
}

func (x *MyPackageCardData) GetMinutePer() int32 {
	if x != nil {
		return x.MinutePer
	}
	return 0
}

func (x *MyPackageCardData) GetMinuteMax() int32 {
	if x != nil {
		return x.MinuteMax
	}
	return 0
}

func (x *MyPackageCardData) GetMinuteMin() int32 {
	if x != nil {
		return x.MinuteMin
	}
	return 0
}

func (x *MyPackageCardData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MyPackageCardData) GetTypeChannel() int32 {
	if x != nil {
		return x.TypeChannel
	}
	return 0
}

func (x *MyPackageCardData) GetActiveAt() string {
	if x != nil {
		return x.ActiveAt
	}
	return ""
}

func (x *MyPackageCardData) GetInvalidAt() string {
	if x != nil {
		return x.InvalidAt
	}
	return ""
}

func (x *MyPackageCardData) GetPackageId() int64 {
	if x != nil {
		return x.PackageId
	}
	return 0
}

func (x *MyPackageCardData) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *MyPackageCardData) GetTypePackage() int32 {
	if x != nil {
		return x.TypePackage
	}
	return 0
}

func (x *MyPackageCardData) GetTypeCard() int32 {
	if x != nil {
		return x.TypeCard
	}
	return 0
}

func (x *MyPackageCardData) GetTypeSale() int32 {
	if x != nil {
		return x.TypeSale
	}
	return 0
}

func (x *MyPackageCardData) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MyPackageCardData) GetOriPrice() float32 {
	if x != nil {
		return x.OriPrice
	}
	return 0
}

func (x *MyPackageCardData) GetUseShop() string {
	if x != nil {
		return x.UseShop
	}
	return ""
}

func (x *MyPackageCardData) GetUseSeat() string {
	if x != nil {
		return x.UseSeat
	}
	return ""
}

func (x *MyPackageCardData) GetUseTime() string {
	if x != nil {
		return x.UseTime
	}
	return ""
}

func (x *MyPackageCardData) GetUseBalance() int32 {
	if x != nil {
		return x.UseBalance
	}
	return 0
}

func (x *MyPackageCardData) GetValidDay() int32 {
	if x != nil {
		return x.ValidDay
	}
	return 0
}

func (x *MyPackageCardData) GetActiveLimit() int32 {
	if x != nil {
		return x.ActiveLimit
	}
	return 0
}

func (x *MyPackageCardData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MyPackageCardData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *MyPackageCardData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MyPackageCardData) GetCanBookingToCloseTime() bool {
	if x != nil {
		return x.CanBookingToCloseTime
	}
	return false
}

func (x *MyPackageCardData) GetCanBookingToHour() string {
	if x != nil {
		return x.CanBookingToHour
	}
	return ""
}

func (x *MyPackageCardData) GetUseShopId() []int32 {
	if x != nil {
		return x.UseShopId
	}
	return nil
}

type UploadAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarBase64 string `protobuf:"bytes,1,opt,name=avatarBase64,proto3" json:"avatarBase64,omitempty"`
}

func (x *UploadAvatarRequest) Reset() {
	*x = UploadAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAvatarRequest) ProtoMessage() {}

func (x *UploadAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAvatarRequest.ProtoReflect.Descriptor instead.
func (*UploadAvatarRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{12}
}

func (x *UploadAvatarRequest) GetAvatarBase64() string {
	if x != nil {
		return x.AvatarBase64
	}
	return ""
}

type AvatarReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *AvatarReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AvatarReply) Reset() {
	*x = AvatarReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarReply) ProtoMessage() {}

func (x *AvatarReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarReply.ProtoReflect.Descriptor instead.
func (*AvatarReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{13}
}

func (x *AvatarReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AvatarReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AvatarReply) GetData() *AvatarReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type MySeatBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	OpenId   string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
}

func (x *MySeatBookRequest) Reset() {
	*x = MySeatBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatBookRequest) ProtoMessage() {}

func (x *MySeatBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatBookRequest.ProtoReflect.Descriptor instead.
func (*MySeatBookRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{14}
}

func (x *MySeatBookRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MySeatBookRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MySeatBookRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MySeatBookRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type MySeatBookListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId   int64 `protobuf:"varint,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
	BookId   int64 `protobuf:"varint,2,opt,name=bookId,proto3" json:"bookId,omitempty"`
	Status   int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Sort     int32 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Page     int32 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *MySeatBookListRequest) Reset() {
	*x = MySeatBookListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatBookListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatBookListRequest) ProtoMessage() {}

func (x *MySeatBookListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatBookListRequest.ProtoReflect.Descriptor instead.
func (*MySeatBookListRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{15}
}

func (x *MySeatBookListRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MySeatBookListRequest) GetBookId() int64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *MySeatBookListRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MySeatBookListRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MySeatBookListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MySeatBookListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MySeatLockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MySeatLockRequest) Reset() {
	*x = MySeatLockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatLockRequest) ProtoMessage() {}

func (x *MySeatLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatLockRequest.ProtoReflect.Descriptor instead.
func (*MySeatLockRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{16}
}

func (x *MySeatLockRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type MySeatBookDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MySeatBookData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MySeatBookDataReply) Reset() {
	*x = MySeatBookDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatBookDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatBookDataReply) ProtoMessage() {}

func (x *MySeatBookDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatBookDataReply.ProtoReflect.Descriptor instead.
func (*MySeatBookDataReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{17}
}

func (x *MySeatBookDataReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MySeatBookDataReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MySeatBookDataReply) GetData() *MySeatBookData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MySeatBookDataListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*MySeatBookData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MySeatBookDataListReply) Reset() {
	*x = MySeatBookDataListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatBookDataListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatBookDataListReply) ProtoMessage() {}

func (x *MySeatBookDataListReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatBookDataListReply.ProtoReflect.Descriptor instead.
func (*MySeatBookDataListReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{18}
}

func (x *MySeatBookDataListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MySeatBookDataListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MySeatBookDataListReply) GetData() []*MySeatBookData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MySeatBookData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ShopId          int64  `protobuf:"varint,2,opt,name=shopId,proto3" json:"shopId,omitempty"`
	ShopAreaId      int64  `protobuf:"varint,3,opt,name=shopAreaId,proto3" json:"shopAreaId,omitempty"`
	SeatId          int64  `protobuf:"varint,4,opt,name=seatId,proto3" json:"seatId,omitempty"`
	MCardId         int64  `protobuf:"varint,5,opt,name=mCardId,proto3" json:"mCardId,omitempty"`
	ShopLabel       string `protobuf:"bytes,6,opt,name=shopLabel,proto3" json:"shopLabel,omitempty"`
	ShopAreaLabel   string `protobuf:"bytes,7,opt,name=shopAreaLabel,proto3" json:"shopAreaLabel,omitempty"`
	SeatLabel       string `protobuf:"bytes,8,opt,name=seatLabel,proto3" json:"seatLabel,omitempty"`
	SeatTypeLabel   string `protobuf:"bytes,9,opt,name=seatTypeLabel,proto3" json:"seatTypeLabel,omitempty"`
	PackageLabel    string `protobuf:"bytes,10,opt,name=packageLabel,proto3" json:"packageLabel,omitempty"`
	PackageType     int32  `protobuf:"varint,11,opt,name=packageType,proto3" json:"packageType,omitempty"`
	BookingType     int32  `protobuf:"varint,12,opt,name=bookingType,proto3" json:"bookingType,omitempty"`
	BookingDay      int32  `protobuf:"varint,13,opt,name=bookingDay,proto3" json:"bookingDay,omitempty"`
	BookingMinute   int32  `protobuf:"varint,14,opt,name=bookingMinute,proto3" json:"bookingMinute,omitempty"`
	BookingStartDay string `protobuf:"bytes,15,opt,name=bookingStartDay,proto3" json:"bookingStartDay,omitempty"`
	BookingEndDay   string `protobuf:"bytes,16,opt,name=bookingEndDay,proto3" json:"bookingEndDay,omitempty"`
	BookingStart    string `protobuf:"bytes,17,opt,name=bookingStart,proto3" json:"bookingStart,omitempty"`
	BookingEnd      string `protobuf:"bytes,18,opt,name=bookingEnd,proto3" json:"bookingEnd,omitempty"`
	TodaySeatAt     string `protobuf:"bytes,19,opt,name=todaySeatAt,proto3" json:"todaySeatAt,omitempty"`
	TodayEndAt      string `protobuf:"bytes,20,opt,name=todayEndAt,proto3" json:"todayEndAt,omitempty"`
	Status          int32  `protobuf:"varint,21,opt,name=status,proto3" json:"status,omitempty"`
	ShopAreaCover   string `protobuf:"bytes,22,opt,name=shopAreaCover,proto3" json:"shopAreaCover,omitempty"`
	CanShare        int32  `protobuf:"varint,23,opt,name=canShare,proto3" json:"canShare,omitempty"`
	SharedCount     int32  `protobuf:"varint,24,opt,name=sharedCount,proto3" json:"sharedCount,omitempty"`
	CanShareLive    int32  `protobuf:"varint,25,opt,name=canShareLive,proto3" json:"canShareLive,omitempty"`
	CanCtrlLight    int32  `protobuf:"varint,26,opt,name=canCtrlLight,proto3" json:"canCtrlLight,omitempty"`
	LiveAddress     string `protobuf:"bytes,27,opt,name=liveAddress,proto3" json:"liveAddress,omitempty"`
}

func (x *MySeatBookData) Reset() {
	*x = MySeatBookData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatBookData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatBookData) ProtoMessage() {}

func (x *MySeatBookData) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatBookData.ProtoReflect.Descriptor instead.
func (*MySeatBookData) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{19}
}

func (x *MySeatBookData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MySeatBookData) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MySeatBookData) GetShopAreaId() int64 {
	if x != nil {
		return x.ShopAreaId
	}
	return 0
}

func (x *MySeatBookData) GetSeatId() int64 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *MySeatBookData) GetMCardId() int64 {
	if x != nil {
		return x.MCardId
	}
	return 0
}

func (x *MySeatBookData) GetShopLabel() string {
	if x != nil {
		return x.ShopLabel
	}
	return ""
}

func (x *MySeatBookData) GetShopAreaLabel() string {
	if x != nil {
		return x.ShopAreaLabel
	}
	return ""
}

func (x *MySeatBookData) GetSeatLabel() string {
	if x != nil {
		return x.SeatLabel
	}
	return ""
}

func (x *MySeatBookData) GetSeatTypeLabel() string {
	if x != nil {
		return x.SeatTypeLabel
	}
	return ""
}

func (x *MySeatBookData) GetPackageLabel() string {
	if x != nil {
		return x.PackageLabel
	}
	return ""
}

func (x *MySeatBookData) GetPackageType() int32 {
	if x != nil {
		return x.PackageType
	}
	return 0
}

func (x *MySeatBookData) GetBookingType() int32 {
	if x != nil {
		return x.BookingType
	}
	return 0
}

func (x *MySeatBookData) GetBookingDay() int32 {
	if x != nil {
		return x.BookingDay
	}
	return 0
}

func (x *MySeatBookData) GetBookingMinute() int32 {
	if x != nil {
		return x.BookingMinute
	}
	return 0
}

func (x *MySeatBookData) GetBookingStartDay() string {
	if x != nil {
		return x.BookingStartDay
	}
	return ""
}

func (x *MySeatBookData) GetBookingEndDay() string {
	if x != nil {
		return x.BookingEndDay
	}
	return ""
}

func (x *MySeatBookData) GetBookingStart() string {
	if x != nil {
		return x.BookingStart
	}
	return ""
}

func (x *MySeatBookData) GetBookingEnd() string {
	if x != nil {
		return x.BookingEnd
	}
	return ""
}

func (x *MySeatBookData) GetTodaySeatAt() string {
	if x != nil {
		return x.TodaySeatAt
	}
	return ""
}

func (x *MySeatBookData) GetTodayEndAt() string {
	if x != nil {
		return x.TodayEndAt
	}
	return ""
}

func (x *MySeatBookData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MySeatBookData) GetShopAreaCover() string {
	if x != nil {
		return x.ShopAreaCover
	}
	return ""
}

func (x *MySeatBookData) GetCanShare() int32 {
	if x != nil {
		return x.CanShare
	}
	return 0
}

func (x *MySeatBookData) GetSharedCount() int32 {
	if x != nil {
		return x.SharedCount
	}
	return 0
}

func (x *MySeatBookData) GetCanShareLive() int32 {
	if x != nil {
		return x.CanShareLive
	}
	return 0
}

func (x *MySeatBookData) GetCanCtrlLight() int32 {
	if x != nil {
		return x.CanCtrlLight
	}
	return 0
}

func (x *MySeatBookData) GetLiveAddress() string {
	if x != nil {
		return x.LiveAddress
	}
	return ""
}

type MyCurrentPackageCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId int64 `protobuf:"varint,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
}

func (x *MyCurrentPackageCardRequest) Reset() {
	*x = MyCurrentPackageCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyCurrentPackageCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyCurrentPackageCardRequest) ProtoMessage() {}

func (x *MyCurrentPackageCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyCurrentPackageCardRequest.ProtoReflect.Descriptor instead.
func (*MyCurrentPackageCardRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{20}
}

func (x *MyCurrentPackageCardRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

type MySeatLockDataListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*MySeatLockData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MySeatLockDataListReply) Reset() {
	*x = MySeatLockDataListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatLockDataListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatLockDataListReply) ProtoMessage() {}

func (x *MySeatLockDataListReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatLockDataListReply.ProtoReflect.Descriptor instead.
func (*MySeatLockDataListReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{21}
}

func (x *MySeatLockDataListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MySeatLockDataListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MySeatLockDataListReply) GetData() []*MySeatLockData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MySeatLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId            int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	ShopId              int64  `protobuf:"varint,3,opt,name=shopId,proto3" json:"shopId,omitempty"`
	ShopAreaId          int64  `protobuf:"varint,4,opt,name=shopAreaId,proto3" json:"shopAreaId,omitempty"`
	SeatId              int64  `protobuf:"varint,5,opt,name=seatId,proto3" json:"seatId,omitempty"`
	LockingStartDay     string `protobuf:"bytes,6,opt,name=lockingStartDay,proto3" json:"lockingStartDay,omitempty"`
	LockingEndDay       string `protobuf:"bytes,7,opt,name=lockingEndDay,proto3" json:"lockingEndDay,omitempty"`
	LockingStart        string `protobuf:"bytes,8,opt,name=lockingStart,proto3" json:"lockingStart,omitempty"`
	LockingEnd          string `protobuf:"bytes,9,opt,name=lockingEnd,proto3" json:"lockingEnd,omitempty"`
	UseTime             string `protobuf:"bytes,10,opt,name=useTime,proto3" json:"useTime,omitempty"`
	Status              int32  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	ShopLabel           string `protobuf:"bytes,12,opt,name=shopLabel,proto3" json:"shopLabel,omitempty"`
	ShopAreaLabel       string `protobuf:"bytes,13,opt,name=shopAreaLabel,proto3" json:"shopAreaLabel,omitempty"`
	SeatLabel           string `protobuf:"bytes,14,opt,name=seatLabel,proto3" json:"seatLabel,omitempty"`
	SeatTypeLabel       string `protobuf:"bytes,15,opt,name=seatTypeLabel,proto3" json:"seatTypeLabel,omitempty"`
	ShopAreaCover       string `protobuf:"bytes,16,opt,name=shopAreaCover,proto3" json:"shopAreaCover,omitempty"`
	PackageLabel        string `protobuf:"bytes,17,opt,name=packageLabel,proto3" json:"packageLabel,omitempty"`
	MemberPackageCardId int64  `protobuf:"varint,18,opt,name=memberPackageCardId,proto3" json:"memberPackageCardId,omitempty"`
	CanControl          int32  `protobuf:"varint,19,opt,name=canControl,proto3" json:"canControl,omitempty"`
}

func (x *MySeatLockData) Reset() {
	*x = MySeatLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySeatLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySeatLockData) ProtoMessage() {}

func (x *MySeatLockData) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySeatLockData.ProtoReflect.Descriptor instead.
func (*MySeatLockData) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{22}
}

func (x *MySeatLockData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MySeatLockData) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MySeatLockData) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *MySeatLockData) GetShopAreaId() int64 {
	if x != nil {
		return x.ShopAreaId
	}
	return 0
}

func (x *MySeatLockData) GetSeatId() int64 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *MySeatLockData) GetLockingStartDay() string {
	if x != nil {
		return x.LockingStartDay
	}
	return ""
}

func (x *MySeatLockData) GetLockingEndDay() string {
	if x != nil {
		return x.LockingEndDay
	}
	return ""
}

func (x *MySeatLockData) GetLockingStart() string {
	if x != nil {
		return x.LockingStart
	}
	return ""
}

func (x *MySeatLockData) GetLockingEnd() string {
	if x != nil {
		return x.LockingEnd
	}
	return ""
}

func (x *MySeatLockData) GetUseTime() string {
	if x != nil {
		return x.UseTime
	}
	return ""
}

func (x *MySeatLockData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MySeatLockData) GetShopLabel() string {
	if x != nil {
		return x.ShopLabel
	}
	return ""
}

func (x *MySeatLockData) GetShopAreaLabel() string {
	if x != nil {
		return x.ShopAreaLabel
	}
	return ""
}

func (x *MySeatLockData) GetSeatLabel() string {
	if x != nil {
		return x.SeatLabel
	}
	return ""
}

func (x *MySeatLockData) GetSeatTypeLabel() string {
	if x != nil {
		return x.SeatTypeLabel
	}
	return ""
}

func (x *MySeatLockData) GetShopAreaCover() string {
	if x != nil {
		return x.ShopAreaCover
	}
	return ""
}

func (x *MySeatLockData) GetPackageLabel() string {
	if x != nil {
		return x.PackageLabel
	}
	return ""
}

func (x *MySeatLockData) GetMemberPackageCardId() int64 {
	if x != nil {
		return x.MemberPackageCardId
	}
	return 0
}

func (x *MySeatLockData) GetCanControl() int32 {
	if x != nil {
		return x.CanControl
	}
	return 0
}

type MyNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       []int64 `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	IsRead   int32   `protobuf:"varint,2,opt,name=isRead,proto3" json:"isRead,omitempty"`
	Page     int32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32   `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *MyNoticeRequest) Reset() {
	*x = MyNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyNoticeRequest) ProtoMessage() {}

func (x *MyNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyNoticeRequest.ProtoReflect.Descriptor instead.
func (*MyNoticeRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{23}
}

func (x *MyNoticeRequest) GetId() []int64 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MyNoticeRequest) GetIsRead() int32 {
	if x != nil {
		return x.IsRead
	}
	return 0
}

func (x *MyNoticeRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *MyNoticeRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type MyNoticeDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string        `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *MyNoticeData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *MyNoticeDataReply) Reset() {
	*x = MyNoticeDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyNoticeDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyNoticeDataReply) ProtoMessage() {}

func (x *MyNoticeDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyNoticeDataReply.ProtoReflect.Descriptor instead.
func (*MyNoticeDataReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{24}
}

func (x *MyNoticeDataReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MyNoticeDataReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MyNoticeDataReply) GetData() *MyNoticeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MyNoticeDataListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*MyNoticeData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MyNoticeDataListReply) Reset() {
	*x = MyNoticeDataListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyNoticeDataListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyNoticeDataListReply) ProtoMessage() {}

func (x *MyNoticeDataListReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyNoticeDataListReply.ProtoReflect.Descriptor instead.
func (*MyNoticeDataListReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{25}
}

func (x *MyNoticeDataListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MyNoticeDataListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MyNoticeDataListReply) GetData() []*MyNoticeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MyNoticeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	NoticeType int32  `protobuf:"varint,4,opt,name=noticeType,proto3" json:"noticeType,omitempty"`
	ExtJson    string `protobuf:"bytes,5,opt,name=extJson,proto3" json:"extJson,omitempty"`
	CreatedAt  string `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *MyNoticeData) Reset() {
	*x = MyNoticeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyNoticeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyNoticeData) ProtoMessage() {}

func (x *MyNoticeData) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyNoticeData.ProtoReflect.Descriptor instead.
func (*MyNoticeData) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{26}
}

func (x *MyNoticeData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MyNoticeData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MyNoticeData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MyNoticeData) GetNoticeType() int32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *MyNoticeData) GetExtJson() string {
	if x != nil {
		return x.ExtJson
	}
	return ""
}

func (x *MyNoticeData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type WxSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        []string `protobuf:"bytes,1,rep,name=type,proto3" json:"type,omitempty"`
	IsSubscribe []int32  `protobuf:"varint,2,rep,packed,name=isSubscribe,proto3" json:"isSubscribe,omitempty"`
}

func (x *WxSubscribeRequest) Reset() {
	*x = WxSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxSubscribeRequest) ProtoMessage() {}

func (x *WxSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxSubscribeRequest.ProtoReflect.Descriptor instead.
func (*WxSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{27}
}

func (x *WxSubscribeRequest) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *WxSubscribeRequest) GetIsSubscribe() []int32 {
	if x != nil {
		return x.IsSubscribe
	}
	return nil
}

type WxSubscribeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *WxSubscribeReply) Reset() {
	*x = WxSubscribeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxSubscribeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxSubscribeReply) ProtoMessage() {}

func (x *WxSubscribeReply) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxSubscribeReply.ProtoReflect.Descriptor instead.
func (*WxSubscribeReply) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{28}
}

func (x *WxSubscribeReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WxSubscribeReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type AvatarReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvatarPath string `protobuf:"bytes,1,opt,name=avatarPath,proto3" json:"avatarPath,omitempty"`
}

func (x *AvatarReply_Data) Reset() {
	*x = AvatarReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_member_v1_member_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvatarReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvatarReply_Data) ProtoMessage() {}

func (x *AvatarReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_member_v1_member_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvatarReply_Data.ProtoReflect.Descriptor instead.
func (*AvatarReply_Data) Descriptor() ([]byte, []int) {
	return file_member_v1_member_proto_rawDescGZIP(), []int{13, 0}
}

func (x *AvatarReply_Data) GetAvatarPath() string {
	if x != nil {
		return x.AvatarPath
	}
	return ""
}

var File_member_v1_member_proto protoreflect.FileDescriptor

var file_member_v1_member_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x61, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xde, 0x01, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6e, 0x65, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x4e, 0x6f, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x4e, 0x6f,
	0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x74, 0x0a, 0x16, 0x4d, 0x79,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x78, 0x0a, 0x1a, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb5, 0x07, 0x0a, 0x11, 0x4d,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x61,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x44,
	0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x50, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x61, 0x72, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x53, 0x65, 0x61,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x61, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x54, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x63, 0x61, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x48, 0x6f, 0x75, 0x72, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f,
	0x48, 0x6f, 0x75, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x53, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x22, 0x39, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x22, 0x90, 0x01,
	0x0a, 0x0b, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x26, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x50, 0x61, 0x74, 0x68,
	0x22, 0x6d, 0x0a, 0x11, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22,
	0xbe, 0x01, 0x0a, 0x15, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x19, 0x92, 0x41, 0x16, 0x32, 0x14,
	0x31, 0x3a, 0xe8, 0xbf, 0x9b, 0xe8, 0xa1, 0x8c, 0xe4, 0xb8, 0xad, 0xe7, 0x9a, 0x84, 0xe8, 0xae,
	0xa2, 0xe5, 0xba, 0xa7, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x2b, 0x0a, 0x11, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6e, 0x0a,
	0x13, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a,
	0x17, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53,
	0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xfc, 0x06, 0x0a, 0x0e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x53, 0x65, 0x61, 0x74, 0x41, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x6f, 0x64, 0x61, 0x79, 0x53, 0x65, 0x61, 0x74, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x64, 0x61, 0x79, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x6f, 0x64, 0x61, 0x79, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41,
	0x72, 0x65, 0x61, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61,
	0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61,
	0x6e, 0x43, 0x74, 0x72, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x61, 0x6e, 0x43, 0x74, 0x72, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x35, 0x0a, 0x1b, 0x4d, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x17, 0x4d, 0x79, 0x53, 0x65, 0x61,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf6, 0x04, 0x0a, 0x0e,
	0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70,
	0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x22, 0x69, 0x0a, 0x0f, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x6a, 0x0a, 0x11, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x15, 0x4d,
	0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa6, 0x01, 0x0a, 0x0c,
	0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x78, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x4a, 0x0a, 0x12, 0x57, 0x78, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x38, 0x0a, 0x10, 0x57, 0x78, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xeb, 0x12, 0x0a, 0x06, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x75, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x33, 0x92, 0x41, 0x14,
	0x12, 0x12, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe4, 0xbf,
	0xa1, 0xe6, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x1a, 0x11, 0x2f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x6c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x30, 0x92, 0x41, 0x14, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8,
	0xe6, 0x88, 0xb7, 0xe4, 0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12,
	0x11, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x8a, 0x01, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x3a, 0x92, 0x41, 0x14, 0x12, 0x12, 0xe4, 0xb8, 0x8a, 0xe4, 0xbc, 0xa0,
	0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xa4, 0xb4, 0xe5, 0x83, 0x8f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0xa0, 0x01, 0x0a, 0x11, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x44, 0x92, 0x41,
	0x1a, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5,
	0xa5, 0x97, 0xe9, 0xa4, 0x90, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x12, 0x1f, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4b, 0x92, 0x41, 0x1a, 0x12, 0x18, 0xe8, 0x8e, 0xb7,
	0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0xa5, 0x97, 0xe9, 0xa4, 0x90, 0xe4,
	0xbf, 0xa1, 0xe6, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0xa1, 0x01, 0x0a, 0x0e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53,
	0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x92, 0x41, 0x1a, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe5, 0x88, 0x97,
	0xe8, 0xa1, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x62, 0x6f,
	0x6f, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x9d, 0x01, 0x0a, 0x0e, 0x4d, 0x79, 0x53, 0x65,
	0x61, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x61,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53,
	0x65, 0x61, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x92, 0x41, 0x1a, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f,
	0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe9, 0x94, 0x81, 0xe4, 0xbd, 0x8d, 0xe5, 0x88, 0x97,
	0xe8, 0xa1, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x6b, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x96, 0x01, 0x0a, 0x0a, 0x4d, 0x79, 0x53, 0x65,
	0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x42, 0x92, 0x41,
	0x14, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94, 0xa8, 0xe6, 0x88, 0xb7, 0xe8,
	0xae, 0xa2, 0xe5, 0xba, 0xa7, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f,
	0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0xb3, 0x01, 0x0a, 0x17, 0x4d, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x45, 0x92, 0x41, 0x17, 0x12, 0x15, 0xe6, 0x9c, 0x80, 0xe8, 0xbf, 0x91, 0xe4, 0xbd, 0xbf, 0xe7,
	0x94, 0xa8, 0xe7, 0x9a, 0x84, 0xe5, 0xa5, 0x97, 0xe9, 0xa4, 0x90, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x12, 0x23, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x12, 0xa9, 0x01, 0x0a, 0x10, 0x4d, 0x79, 0x53, 0x65, 0x61,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65,
	0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79,
	0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x4f, 0x92, 0x41, 0x1a, 0x12, 0x18, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x86, 0xe4, 0xba, 0xab, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0xb8, 0x01, 0x0a, 0x14, 0x4d, 0x79, 0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x65,
	0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79,
	0x53, 0x65, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x5a, 0x92, 0x41, 0x20, 0x12, 0x1e, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe7, 0x94,
	0xa8, 0xe6, 0x88, 0xb7, 0xe5, 0x88, 0x86, 0xe4, 0xba, 0xab, 0xe7, 0x8e, 0xb0, 0xe5, 0x9c, 0xba,
	0xe7, 0x9b, 0x91, 0xe6, 0x8e, 0xa7, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x12, 0x2f, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65, 0x61, 0x74,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x85, 0x01,
	0x0a, 0x08, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x33, 0x92, 0x41, 0x14, 0x12, 0x12, 0xe6, 0x88, 0x91, 0xe7, 0x9a, 0x84, 0xe6, 0xb6, 0x88,
	0xe6, 0x81, 0xaf, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x79, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0a, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x38, 0x92, 0x41, 0x17, 0x12,
	0x15, 0xe6, 0x9c, 0x80, 0xe8, 0xbf, 0x91, 0xe7, 0x9a, 0x84, 0xe4, 0xb8, 0x80, 0xe6, 0x9d, 0xa1,
	0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x92, 0x41, 0x0e, 0x12, 0x0c, 0xe5, 0xb7, 0xb2, 0xe8,
	0xaf, 0xbb, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01,
	0x2a, 0x22, 0x16, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x0b, 0x57, 0x78,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x78, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x78, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x39, 0x92,
	0x41, 0x14, 0x12, 0x12, 0xe5, 0xbe, 0xae, 0xe4, 0xbf, 0xa1, 0xe6, 0xb6, 0x88, 0xe6, 0x81, 0xaf,
	0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22,
	0x17, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x78, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x2f, 0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1c, 0x73, 0x74, 0x75,
	0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x47, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_member_v1_member_proto_rawDescOnce sync.Once
	file_member_v1_member_proto_rawDescData = file_member_v1_member_proto_rawDesc
)

func file_member_v1_member_proto_rawDescGZIP() []byte {
	file_member_v1_member_proto_rawDescOnce.Do(func() {
		file_member_v1_member_proto_rawDescData = protoimpl.X.CompressGZIP(file_member_v1_member_proto_rawDescData)
	})
	return file_member_v1_member_proto_rawDescData
}

var file_member_v1_member_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_member_v1_member_proto_goTypes = []interface{}{
	(*CreateRequest)(nil),               // 0: api.member.v1.CreateRequest
	(*CreateReply)(nil),                 // 1: api.member.v1.CreateReply
	(*UpdateRequest)(nil),               // 2: api.member.v1.UpdateRequest
	(*DeleteRequest)(nil),               // 3: api.member.v1.DeleteRequest
	(*DeleteReply)(nil),                 // 4: api.member.v1.DeleteReply
	(*GetRequest)(nil),                  // 5: api.member.v1.GetRequest
	(*ListRequest)(nil),                 // 6: api.member.v1.ListRequest
	(*DataReply)(nil),                   // 7: api.member.v1.DataReply
	(*Data)(nil),                        // 8: api.member.v1.Data
	(*MyPackageCardDataReply)(nil),      // 9: api.member.v1.MyPackageCardDataReply
	(*MyPackageCardDataListReply)(nil),  // 10: api.member.v1.MyPackageCardDataListReply
	(*MyPackageCardData)(nil),           // 11: api.member.v1.MyPackageCardData
	(*UploadAvatarRequest)(nil),         // 12: api.member.v1.UploadAvatarRequest
	(*AvatarReply)(nil),                 // 13: api.member.v1.AvatarReply
	(*MySeatBookRequest)(nil),           // 14: api.member.v1.MySeatBookRequest
	(*MySeatBookListRequest)(nil),       // 15: api.member.v1.MySeatBookListRequest
	(*MySeatLockRequest)(nil),           // 16: api.member.v1.MySeatLockRequest
	(*MySeatBookDataReply)(nil),         // 17: api.member.v1.MySeatBookDataReply
	(*MySeatBookDataListReply)(nil),     // 18: api.member.v1.MySeatBookDataListReply
	(*MySeatBookData)(nil),              // 19: api.member.v1.MySeatBookData
	(*MyCurrentPackageCardRequest)(nil), // 20: api.member.v1.MyCurrentPackageCardRequest
	(*MySeatLockDataListReply)(nil),     // 21: api.member.v1.MySeatLockDataListReply
	(*MySeatLockData)(nil),              // 22: api.member.v1.MySeatLockData
	(*MyNoticeRequest)(nil),             // 23: api.member.v1.MyNoticeRequest
	(*MyNoticeDataReply)(nil),           // 24: api.member.v1.MyNoticeDataReply
	(*MyNoticeDataListReply)(nil),       // 25: api.member.v1.MyNoticeDataListReply
	(*MyNoticeData)(nil),                // 26: api.member.v1.MyNoticeData
	(*WxSubscribeRequest)(nil),          // 27: api.member.v1.WxSubscribeRequest
	(*WxSubscribeReply)(nil),            // 28: api.member.v1.WxSubscribeReply
	(*AvatarReply_Data)(nil),            // 29: api.member.v1.AvatarReply.Data
}
var file_member_v1_member_proto_depIdxs = []int32{
	8,  // 0: api.member.v1.DataReply.data:type_name -> api.member.v1.Data
	11, // 1: api.member.v1.MyPackageCardDataReply.data:type_name -> api.member.v1.MyPackageCardData
	11, // 2: api.member.v1.MyPackageCardDataListReply.data:type_name -> api.member.v1.MyPackageCardData
	29, // 3: api.member.v1.AvatarReply.data:type_name -> api.member.v1.AvatarReply.Data
	19, // 4: api.member.v1.MySeatBookDataReply.data:type_name -> api.member.v1.MySeatBookData
	19, // 5: api.member.v1.MySeatBookDataListReply.data:type_name -> api.member.v1.MySeatBookData
	22, // 6: api.member.v1.MySeatLockDataListReply.data:type_name -> api.member.v1.MySeatLockData
	26, // 7: api.member.v1.MyNoticeDataReply.data:type_name -> api.member.v1.MyNoticeData
	26, // 8: api.member.v1.MyNoticeDataListReply.data:type_name -> api.member.v1.MyNoticeData
	0,  // 9: api.member.v1.Member.Create:input_type -> api.member.v1.CreateRequest
	2,  // 10: api.member.v1.Member.Update:input_type -> api.member.v1.UpdateRequest
	3,  // 11: api.member.v1.Member.Delete:input_type -> api.member.v1.DeleteRequest
	5,  // 12: api.member.v1.Member.Get:input_type -> api.member.v1.GetRequest
	12, // 13: api.member.v1.Member.uploadAvatar:input_type -> api.member.v1.UploadAvatarRequest
	6,  // 14: api.member.v1.Member.MyPackageCardList:input_type -> api.member.v1.ListRequest
	5,  // 15: api.member.v1.Member.MyPackageCard:input_type -> api.member.v1.GetRequest
	15, // 16: api.member.v1.Member.MySeatBookList:input_type -> api.member.v1.MySeatBookListRequest
	16, // 17: api.member.v1.Member.MySeatLockList:input_type -> api.member.v1.MySeatLockRequest
	14, // 18: api.member.v1.Member.MySeatBook:input_type -> api.member.v1.MySeatBookRequest
	20, // 19: api.member.v1.Member.MyCurrentUsePackageCard:input_type -> api.member.v1.MyCurrentPackageCardRequest
	14, // 20: api.member.v1.Member.MySeatBookShared:input_type -> api.member.v1.MySeatBookRequest
	14, // 21: api.member.v1.Member.MySeatBookLiveShared:input_type -> api.member.v1.MySeatBookRequest
	23, // 22: api.member.v1.Member.MyNotice:input_type -> api.member.v1.MyNoticeRequest
	23, // 23: api.member.v1.Member.LastNotice:input_type -> api.member.v1.MyNoticeRequest
	23, // 24: api.member.v1.Member.ReadNotice:input_type -> api.member.v1.MyNoticeRequest
	27, // 25: api.member.v1.Member.WxSubscribe:input_type -> api.member.v1.WxSubscribeRequest
	1,  // 26: api.member.v1.Member.Create:output_type -> api.member.v1.CreateReply
	7,  // 27: api.member.v1.Member.Update:output_type -> api.member.v1.DataReply
	4,  // 28: api.member.v1.Member.Delete:output_type -> api.member.v1.DeleteReply
	7,  // 29: api.member.v1.Member.Get:output_type -> api.member.v1.DataReply
	13, // 30: api.member.v1.Member.uploadAvatar:output_type -> api.member.v1.AvatarReply
	10, // 31: api.member.v1.Member.MyPackageCardList:output_type -> api.member.v1.MyPackageCardDataListReply
	9,  // 32: api.member.v1.Member.MyPackageCard:output_type -> api.member.v1.MyPackageCardDataReply
	18, // 33: api.member.v1.Member.MySeatBookList:output_type -> api.member.v1.MySeatBookDataListReply
	21, // 34: api.member.v1.Member.MySeatLockList:output_type -> api.member.v1.MySeatLockDataListReply
	17, // 35: api.member.v1.Member.MySeatBook:output_type -> api.member.v1.MySeatBookDataReply
	9,  // 36: api.member.v1.Member.MyCurrentUsePackageCard:output_type -> api.member.v1.MyPackageCardDataReply
	17, // 37: api.member.v1.Member.MySeatBookShared:output_type -> api.member.v1.MySeatBookDataReply
	17, // 38: api.member.v1.Member.MySeatBookLiveShared:output_type -> api.member.v1.MySeatBookDataReply
	25, // 39: api.member.v1.Member.MyNotice:output_type -> api.member.v1.MyNoticeDataListReply
	25, // 40: api.member.v1.Member.LastNotice:output_type -> api.member.v1.MyNoticeDataListReply
	24, // 41: api.member.v1.Member.ReadNotice:output_type -> api.member.v1.MyNoticeDataReply
	28, // 42: api.member.v1.Member.WxSubscribe:output_type -> api.member.v1.WxSubscribeReply
	26, // [26:43] is the sub-list for method output_type
	9,  // [9:26] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_member_v1_member_proto_init() }
func file_member_v1_member_proto_init() {
	if File_member_v1_member_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_member_v1_member_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPackageCardDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPackageCardDataListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyPackageCardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatBookListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatLockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatBookDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatBookDataListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatBookData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyCurrentPackageCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatLockDataListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySeatLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyNoticeDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyNoticeDataListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyNoticeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxSubscribeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_member_v1_member_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvatarReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_member_v1_member_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_member_v1_member_proto_goTypes,
		DependencyIndexes: file_member_v1_member_proto_depIdxs,
		MessageInfos:      file_member_v1_member_proto_msgTypes,
	}.Build()
	File_member_v1_member_proto = out.File
	file_member_v1_member_proto_rawDesc = nil
	file_member_v1_member_proto_goTypes = nil
	file_member_v1_member_proto_depIdxs = nil
}
