// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.3
// source: seat/v1/seat.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{0}
}

type CreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateReply) Reset() {
	*x = CreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReply) ProtoMessage() {}

func (x *CreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReply.ProtoReflect.Descriptor instead.
func (*CreateReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{1}
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{2}
}

type UpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateReply) Reset() {
	*x = UpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReply) ProtoMessage() {}

func (x *UpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReply.ProtoReflect.Descriptor instead.
func (*UpdateReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{3}
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{4}
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{5}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	GteDateEnd string `protobuf:"bytes,3,opt,name=gteDateEnd,proto3" json:"gteDateEnd,omitempty"`
	LteDateEnd string `protobuf:"bytes,4,opt,name=lteDateEnd,proto3" json:"lteDateEnd,omitempty"`
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{7}
}

func (x *FindRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FindRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FindRequest) GetGteDateEnd() string {
	if x != nil {
		return x.GteDateEnd
	}
	return ""
}

func (x *FindRequest) GetLteDateEnd() string {
	if x != nil {
		return x.LteDateEnd
	}
	return ""
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{8}
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Pid        int64  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	TypeSeat   int32  `protobuf:"varint,3,opt,name=typeSeat,proto3" json:"typeSeat,omitempty"`
	ShopId     int64  `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`
	ShopAreaId int64  `protobuf:"varint,5,opt,name=shopAreaId,proto3" json:"shopAreaId,omitempty"`
	Status     int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Sort       int32  `protobuf:"varint,7,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{9}
}

func (x *SearchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchRequest) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *SearchRequest) GetTypeSeat() int32 {
	if x != nil {
		return x.TypeSeat
	}
	return 0
}

func (x *SearchRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SearchRequest) GetShopAreaId() int64 {
	if x != nil {
		return x.ShopAreaId
	}
	return 0
}

func (x *SearchRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type DataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *Data  `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DataReply) Reset() {
	*x = DataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataReply) ProtoMessage() {}

func (x *DataReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataReply.ProtoReflect.Descriptor instead.
func (*DataReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{10}
}

func (x *DataReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DataReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DataReply) GetData() *Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListReply) Reset() {
	*x = ListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReply) ProtoMessage() {}

func (x *ListReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReply.ProtoReflect.Descriptor instead.
func (*ListReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{11}
}

func (x *ListReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListReply) GetData() []*Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid           int64      `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Name          string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TypeSeat      int32      `protobuf:"varint,4,opt,name=typeSeat,proto3" json:"typeSeat,omitempty"`
	TypeSeatLabel string     `protobuf:"bytes,5,opt,name=typeSeatLabel,proto3" json:"typeSeatLabel,omitempty"`
	ShopId        int64      `protobuf:"varint,6,opt,name=shopId,proto3" json:"shopId,omitempty"`
	ShopAreaId    int64      `protobuf:"varint,7,opt,name=shopAreaId,proto3" json:"shopAreaId,omitempty"`
	ShopAreaLabel string     `protobuf:"bytes,8,opt,name=shopAreaLabel,proto3" json:"shopAreaLabel,omitempty"`
	Status        int32      `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Sort          int32      `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	Remark        string     `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	MapPosition   string     `protobuf:"bytes,12,opt,name=map_position,json=mapPosition,proto3" json:"map_position,omitempty"`
	Booking       []*Booking `protobuf:"bytes,13,rep,name=booking,proto3" json:"booking,omitempty"`
	Locking       []*Locking `protobuf:"bytes,14,rep,name=locking,proto3" json:"locking,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{12}
}

func (x *Data) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Data) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Data) GetTypeSeat() int32 {
	if x != nil {
		return x.TypeSeat
	}
	return 0
}

func (x *Data) GetTypeSeatLabel() string {
	if x != nil {
		return x.TypeSeatLabel
	}
	return ""
}

func (x *Data) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Data) GetShopAreaId() int64 {
	if x != nil {
		return x.ShopAreaId
	}
	return 0
}

func (x *Data) GetShopAreaLabel() string {
	if x != nil {
		return x.ShopAreaLabel
	}
	return ""
}

func (x *Data) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Data) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Data) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *Data) GetMapPosition() string {
	if x != nil {
		return x.MapPosition
	}
	return ""
}

func (x *Data) GetBooking() []*Booking {
	if x != nil {
		return x.Booking
	}
	return nil
}

func (x *Data) GetLocking() []*Locking {
	if x != nil {
		return x.Locking
	}
	return nil
}

type OverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopId       int64  `protobuf:"varint,1,opt,name=shopId,proto3" json:"shopId,omitempty"`
	GteDateEnd   string `protobuf:"bytes,2,opt,name=gteDateEnd,proto3" json:"gteDateEnd,omitempty"`
	LteDateEnd   string `protobuf:"bytes,3,opt,name=lteDateEnd,proto3" json:"lteDateEnd,omitempty"`
	LteDateStart string `protobuf:"bytes,4,opt,name=lteDateStart,proto3" json:"lteDateStart,omitempty"`
	GteDateStart string `protobuf:"bytes,5,opt,name=gteDateStart,proto3" json:"gteDateStart,omitempty"`
}

func (x *OverviewRequest) Reset() {
	*x = OverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewRequest) ProtoMessage() {}

func (x *OverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewRequest.ProtoReflect.Descriptor instead.
func (*OverviewRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{13}
}

func (x *OverviewRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OverviewRequest) GetGteDateEnd() string {
	if x != nil {
		return x.GteDateEnd
	}
	return ""
}

func (x *OverviewRequest) GetLteDateEnd() string {
	if x != nil {
		return x.LteDateEnd
	}
	return ""
}

func (x *OverviewRequest) GetLteDateStart() string {
	if x != nil {
		return x.LteDateStart
	}
	return ""
}

func (x *OverviewRequest) GetGteDateStart() string {
	if x != nil {
		return x.GteDateStart
	}
	return ""
}

type OverviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data []*OverviewReply_Data `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *OverviewReply) Reset() {
	*x = OverviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewReply) ProtoMessage() {}

func (x *OverviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewReply.ProtoReflect.Descriptor instead.
func (*OverviewReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{14}
}

func (x *OverviewReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OverviewReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OverviewReply) GetData() []*OverviewReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type Booking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MemberId        int64  `protobuf:"varint,2,opt,name=memberId,proto3" json:"memberId,omitempty"`
	BookingType     int32  `protobuf:"varint,3,opt,name=bookingType,proto3" json:"bookingType,omitempty"`
	BookingDay      int32  `protobuf:"varint,4,opt,name=bookingDay,proto3" json:"bookingDay,omitempty"`
	BookingMinute   int32  `protobuf:"varint,5,opt,name=bookingMinute,proto3" json:"bookingMinute,omitempty"`
	BookingStartDay string `protobuf:"bytes,6,opt,name=bookingStartDay,proto3" json:"bookingStartDay,omitempty"`
	BookingEndDay   string `protobuf:"bytes,7,opt,name=bookingEndDay,proto3" json:"bookingEndDay,omitempty"`
	BookingStart    string `protobuf:"bytes,8,opt,name=bookingStart,proto3" json:"bookingStart,omitempty"`
	BookingEnd      string `protobuf:"bytes,9,opt,name=bookingEnd,proto3" json:"bookingEnd,omitempty"`
	Status          int32  `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Booking) Reset() {
	*x = Booking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Booking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Booking) ProtoMessage() {}

func (x *Booking) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Booking.ProtoReflect.Descriptor instead.
func (*Booking) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{15}
}

func (x *Booking) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Booking) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Booking) GetBookingType() int32 {
	if x != nil {
		return x.BookingType
	}
	return 0
}

func (x *Booking) GetBookingDay() int32 {
	if x != nil {
		return x.BookingDay
	}
	return 0
}

func (x *Booking) GetBookingMinute() int32 {
	if x != nil {
		return x.BookingMinute
	}
	return 0
}

func (x *Booking) GetBookingStartDay() string {
	if x != nil {
		return x.BookingStartDay
	}
	return ""
}

func (x *Booking) GetBookingEndDay() string {
	if x != nil {
		return x.BookingEndDay
	}
	return ""
}

func (x *Booking) GetBookingStart() string {
	if x != nil {
		return x.BookingStart
	}
	return ""
}

func (x *Booking) GetBookingEnd() string {
	if x != nil {
		return x.BookingEnd
	}
	return ""
}

func (x *Booking) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type Locking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId        int64  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	LockingStartDay string `protobuf:"bytes,2,opt,name=lockingStartDay,proto3" json:"lockingStartDay,omitempty"`
	LockingEndDay   string `protobuf:"bytes,3,opt,name=lockingEndDay,proto3" json:"lockingEndDay,omitempty"`
	LockingStart    string `protobuf:"bytes,4,opt,name=lockingStart,proto3" json:"lockingStart,omitempty"`
	LockingEnd      string `protobuf:"bytes,5,opt,name=lockingEnd,proto3" json:"lockingEnd,omitempty"`
	UseTime         string `protobuf:"bytes,6,opt,name=useTime,proto3" json:"useTime,omitempty"`
	Status          int32  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Locking) Reset() {
	*x = Locking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Locking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Locking) ProtoMessage() {}

func (x *Locking) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Locking.ProtoReflect.Descriptor instead.
func (*Locking) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{16}
}

func (x *Locking) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Locking) GetLockingStartDay() string {
	if x != nil {
		return x.LockingStartDay
	}
	return ""
}

func (x *Locking) GetLockingEndDay() string {
	if x != nil {
		return x.LockingEndDay
	}
	return ""
}

func (x *Locking) GetLockingStart() string {
	if x != nil {
		return x.LockingStart
	}
	return ""
}

func (x *Locking) GetLockingEnd() string {
	if x != nil {
		return x.LockingEnd
	}
	return ""
}

func (x *Locking) GetUseTime() string {
	if x != nil {
		return x.UseTime
	}
	return ""
}

func (x *Locking) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type BookingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId              int64   `protobuf:"varint,1,opt,name=seatId,proto3" json:"seatId,omitempty"`
	MemberPackageCardId int64   `protobuf:"varint,2,opt,name=memberPackageCardId,proto3" json:"memberPackageCardId,omitempty"`
	MerchantId          int64   `protobuf:"varint,3,opt,name=merchantId,proto3" json:"merchantId,omitempty"`
	ShopId              int64   `protobuf:"varint,4,opt,name=shopId,proto3" json:"shopId,omitempty"`
	BookingType         int32   `protobuf:"varint,5,opt,name=bookingType,proto3" json:"bookingType,omitempty"`
	BookingStartDay     string  `protobuf:"bytes,6,opt,name=bookingStartDay,proto3" json:"bookingStartDay,omitempty"`
	BookingEndDay       string  `protobuf:"bytes,7,opt,name=bookingEndDay,proto3" json:"bookingEndDay,omitempty"`
	BookingStart        string  `protobuf:"bytes,8,opt,name=bookingStart,proto3" json:"bookingStart,omitempty"`
	BookingEnd          string  `protobuf:"bytes,9,opt,name=bookingEnd,proto3" json:"bookingEnd,omitempty"`
	BookingToCloseTime  bool    `protobuf:"varint,10,opt,name=bookingToCloseTime,proto3" json:"bookingToCloseTime,omitempty"`
	BookingHours        int32   `protobuf:"varint,11,opt,name=bookingHours,proto3" json:"bookingHours,omitempty"`
	NoEnoughUse         int32   `protobuf:"varint,12,opt,name=noEnoughUse,proto3" json:"noEnoughUse,omitempty"`
	ReceiptCode         string  `protobuf:"bytes,13,opt,name=receiptCode,proto3" json:"receiptCode,omitempty"`
	UseRemain           int32   `protobuf:"varint,14,opt,name=useRemain,proto3" json:"useRemain,omitempty"`
	BookingToUseEndTime bool    `protobuf:"varint,15,opt,name=bookingToUseEndTime,proto3" json:"bookingToUseEndTime,omitempty"`
	BookingMinute       int32   `protobuf:"varint,16,opt,name=bookingMinute,proto3" json:"bookingMinute,omitempty"`
	BookingWeek         []int32 `protobuf:"varint,17,rep,packed,name=bookingWeek,proto3" json:"bookingWeek,omitempty"`
}

func (x *BookingRequest) Reset() {
	*x = BookingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingRequest) ProtoMessage() {}

func (x *BookingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingRequest.ProtoReflect.Descriptor instead.
func (*BookingRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{17}
}

func (x *BookingRequest) GetSeatId() int64 {
	if x != nil {
		return x.SeatId
	}
	return 0
}

func (x *BookingRequest) GetMemberPackageCardId() int64 {
	if x != nil {
		return x.MemberPackageCardId
	}
	return 0
}

func (x *BookingRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *BookingRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *BookingRequest) GetBookingType() int32 {
	if x != nil {
		return x.BookingType
	}
	return 0
}

func (x *BookingRequest) GetBookingStartDay() string {
	if x != nil {
		return x.BookingStartDay
	}
	return ""
}

func (x *BookingRequest) GetBookingEndDay() string {
	if x != nil {
		return x.BookingEndDay
	}
	return ""
}

func (x *BookingRequest) GetBookingStart() string {
	if x != nil {
		return x.BookingStart
	}
	return ""
}

func (x *BookingRequest) GetBookingEnd() string {
	if x != nil {
		return x.BookingEnd
	}
	return ""
}

func (x *BookingRequest) GetBookingToCloseTime() bool {
	if x != nil {
		return x.BookingToCloseTime
	}
	return false
}

func (x *BookingRequest) GetBookingHours() int32 {
	if x != nil {
		return x.BookingHours
	}
	return 0
}

func (x *BookingRequest) GetNoEnoughUse() int32 {
	if x != nil {
		return x.NoEnoughUse
	}
	return 0
}

func (x *BookingRequest) GetReceiptCode() string {
	if x != nil {
		return x.ReceiptCode
	}
	return ""
}

func (x *BookingRequest) GetUseRemain() int32 {
	if x != nil {
		return x.UseRemain
	}
	return 0
}

func (x *BookingRequest) GetBookingToUseEndTime() bool {
	if x != nil {
		return x.BookingToUseEndTime
	}
	return false
}

func (x *BookingRequest) GetBookingMinute() int32 {
	if x != nil {
		return x.BookingMinute
	}
	return 0
}

func (x *BookingRequest) GetBookingWeek() []int32 {
	if x != nil {
		return x.BookingWeek
	}
	return nil
}

type BookingChangeSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId       int64 `protobuf:"varint,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
	ChangeSeatId int64 `protobuf:"varint,2,opt,name=changeSeatId,proto3" json:"changeSeatId,omitempty"`
}

func (x *BookingChangeSeatRequest) Reset() {
	*x = BookingChangeSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingChangeSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingChangeSeatRequest) ProtoMessage() {}

func (x *BookingChangeSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingChangeSeatRequest.ProtoReflect.Descriptor instead.
func (*BookingChangeSeatRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{18}
}

func (x *BookingChangeSeatRequest) GetBookId() int64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookingChangeSeatRequest) GetChangeSeatId() int64 {
	if x != nil {
		return x.ChangeSeatId
	}
	return 0
}

type BookingAddTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId             int64 `protobuf:"varint,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
	BookingToCloseTime bool  `protobuf:"varint,2,opt,name=bookingToCloseTime,proto3" json:"bookingToCloseTime,omitempty"`
	BookingMin         int32 `protobuf:"varint,3,opt,name=bookingMin,proto3" json:"bookingMin,omitempty"`
}

func (x *BookingAddTimeRequest) Reset() {
	*x = BookingAddTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingAddTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingAddTimeRequest) ProtoMessage() {}

func (x *BookingAddTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingAddTimeRequest.ProtoReflect.Descriptor instead.
func (*BookingAddTimeRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{19}
}

func (x *BookingAddTimeRequest) GetBookId() int64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookingAddTimeRequest) GetBookingToCloseTime() bool {
	if x != nil {
		return x.BookingToCloseTime
	}
	return false
}

func (x *BookingAddTimeRequest) GetBookingMin() int32 {
	if x != nil {
		return x.BookingMin
	}
	return 0
}

type BookingChangeStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId       int64 `protobuf:"varint,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
	ChangeStatus int32 `protobuf:"varint,2,opt,name=changeStatus,proto3" json:"changeStatus,omitempty"`
}

func (x *BookingChangeStatusRequest) Reset() {
	*x = BookingChangeStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingChangeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingChangeStatusRequest) ProtoMessage() {}

func (x *BookingChangeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingChangeStatusRequest.ProtoReflect.Descriptor instead.
func (*BookingChangeStatusRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{20}
}

func (x *BookingChangeStatusRequest) GetBookId() int64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookingChangeStatusRequest) GetChangeStatus() int32 {
	if x != nil {
		return x.ChangeStatus
	}
	return 0
}

type BookingOpenDoorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId int64  `protobuf:"varint,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
	Door   int64  `protobuf:"varint,2,opt,name=door,proto3" json:"door,omitempty"`
	Token  string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	OpenId string `protobuf:"bytes,4,opt,name=openId,proto3" json:"openId,omitempty"`
}

func (x *BookingOpenDoorRequest) Reset() {
	*x = BookingOpenDoorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingOpenDoorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingOpenDoorRequest) ProtoMessage() {}

func (x *BookingOpenDoorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingOpenDoorRequest.ProtoReflect.Descriptor instead.
func (*BookingOpenDoorRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{21}
}

func (x *BookingOpenDoorRequest) GetBookId() int64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookingOpenDoorRequest) GetDoor() int64 {
	if x != nil {
		return x.Door
	}
	return 0
}

func (x *BookingOpenDoorRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BookingOpenDoorRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type BookingControlSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookId int64  `protobuf:"varint,1,opt,name=bookId,proto3" json:"bookId,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	OpenId string `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId,omitempty"`
}

func (x *BookingControlSeatRequest) Reset() {
	*x = BookingControlSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingControlSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingControlSeatRequest) ProtoMessage() {}

func (x *BookingControlSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingControlSeatRequest.ProtoReflect.Descriptor instead.
func (*BookingControlSeatRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{22}
}

func (x *BookingControlSeatRequest) GetBookId() int64 {
	if x != nil {
		return x.BookId
	}
	return 0
}

func (x *BookingControlSeatRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *BookingControlSeatRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type BookingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *BookingReply) Reset() {
	*x = BookingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingReply) ProtoMessage() {}

func (x *BookingReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingReply.ProtoReflect.Descriptor instead.
func (*BookingReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{23}
}

func (x *BookingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BookingReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type BookingValidateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BookingValidateReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookingValidateReply) Reset() {
	*x = BookingValidateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingValidateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingValidateReply) ProtoMessage() {}

func (x *BookingValidateReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingValidateReply.ProtoReflect.Descriptor instead.
func (*BookingValidateReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{24}
}

func (x *BookingValidateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BookingValidateReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BookingValidateReply) GetData() *BookingValidateReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type BookingGenSharekDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *BookingGenSharekDataReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BookingGenSharekDataReply) Reset() {
	*x = BookingGenSharekDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingGenSharekDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingGenSharekDataReply) ProtoMessage() {}

func (x *BookingGenSharekDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingGenSharekDataReply.ProtoReflect.Descriptor instead.
func (*BookingGenSharekDataReply) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{25}
}

func (x *BookingGenSharekDataReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BookingGenSharekDataReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BookingGenSharekDataReply) GetData() *BookingGenSharekDataReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type LockingOpenDoorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockId int64 `protobuf:"varint,1,opt,name=lockId,proto3" json:"lockId,omitempty"`
	Door   int64 `protobuf:"varint,2,opt,name=door,proto3" json:"door,omitempty"`
}

func (x *LockingOpenDoorRequest) Reset() {
	*x = LockingOpenDoorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockingOpenDoorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockingOpenDoorRequest) ProtoMessage() {}

func (x *LockingOpenDoorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockingOpenDoorRequest.ProtoReflect.Descriptor instead.
func (*LockingOpenDoorRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{26}
}

func (x *LockingOpenDoorRequest) GetLockId() int64 {
	if x != nil {
		return x.LockId
	}
	return 0
}

func (x *LockingOpenDoorRequest) GetDoor() int64 {
	if x != nil {
		return x.Door
	}
	return 0
}

type LockingControlSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockId int64 `protobuf:"varint,1,opt,name=lockId,proto3" json:"lockId,omitempty"`
}

func (x *LockingControlSeatRequest) Reset() {
	*x = LockingControlSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockingControlSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockingControlSeatRequest) ProtoMessage() {}

func (x *LockingControlSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockingControlSeatRequest.ProtoReflect.Descriptor instead.
func (*LockingControlSeatRequest) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{27}
}

func (x *LockingControlSeatRequest) GetLockId() int64 {
	if x != nil {
		return x.LockId
	}
	return 0
}

type OverviewReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid           int64      `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Name          string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	TypeSeat      int32      `protobuf:"varint,4,opt,name=typeSeat,proto3" json:"typeSeat,omitempty"`
	TypeSeatLabel string     `protobuf:"bytes,5,opt,name=typeSeatLabel,proto3" json:"typeSeatLabel,omitempty"`
	ShopId        int64      `protobuf:"varint,6,opt,name=shopId,proto3" json:"shopId,omitempty"`
	ShopAreaId    int64      `protobuf:"varint,7,opt,name=shopAreaId,proto3" json:"shopAreaId,omitempty"`
	ShopAreaLabel string     `protobuf:"bytes,8,opt,name=shopAreaLabel,proto3" json:"shopAreaLabel,omitempty"`
	Status        int32      `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"`
	Sort          int32      `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	Remark        string     `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	MapPosition   string     `protobuf:"bytes,12,opt,name=map_position,json=mapPosition,proto3" json:"map_position,omitempty"`
	Booking       []*Booking `protobuf:"bytes,13,rep,name=booking,proto3" json:"booking,omitempty"`
	Locking       []*Locking `protobuf:"bytes,15,rep,name=locking,proto3" json:"locking,omitempty"`
}

func (x *OverviewReply_Data) Reset() {
	*x = OverviewReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewReply_Data) ProtoMessage() {}

func (x *OverviewReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewReply_Data.ProtoReflect.Descriptor instead.
func (*OverviewReply_Data) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{14, 0}
}

func (x *OverviewReply_Data) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OverviewReply_Data) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *OverviewReply_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OverviewReply_Data) GetTypeSeat() int32 {
	if x != nil {
		return x.TypeSeat
	}
	return 0
}

func (x *OverviewReply_Data) GetTypeSeatLabel() string {
	if x != nil {
		return x.TypeSeatLabel
	}
	return ""
}

func (x *OverviewReply_Data) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OverviewReply_Data) GetShopAreaId() int64 {
	if x != nil {
		return x.ShopAreaId
	}
	return 0
}

func (x *OverviewReply_Data) GetShopAreaLabel() string {
	if x != nil {
		return x.ShopAreaLabel
	}
	return ""
}

func (x *OverviewReply_Data) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OverviewReply_Data) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *OverviewReply_Data) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OverviewReply_Data) GetMapPosition() string {
	if x != nil {
		return x.MapPosition
	}
	return ""
}

func (x *OverviewReply_Data) GetBooking() []*Booking {
	if x != nil {
		return x.Booking
	}
	return nil
}

func (x *OverviewReply_Data) GetLocking() []*Locking {
	if x != nil {
		return x.Locking
	}
	return nil
}

type BookingValidateReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid     bool                                `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
	InvalidCode int32                               `protobuf:"varint,2,opt,name=invalidCode,proto3" json:"invalidCode,omitempty"`
	Reason      string                              `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	PackageCard []*BookingValidateReply_PackageCard `protobuf:"bytes,4,rep,name=packageCard,proto3" json:"packageCard,omitempty"`
}

func (x *BookingValidateReply_Data) Reset() {
	*x = BookingValidateReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingValidateReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingValidateReply_Data) ProtoMessage() {}

func (x *BookingValidateReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingValidateReply_Data.ProtoReflect.Descriptor instead.
func (*BookingValidateReply_Data) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{24, 0}
}

func (x *BookingValidateReply_Data) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *BookingValidateReply_Data) GetInvalidCode() int32 {
	if x != nil {
		return x.InvalidCode
	}
	return 0
}

func (x *BookingValidateReply_Data) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BookingValidateReply_Data) GetPackageCard() []*BookingValidateReply_PackageCard {
	if x != nil {
		return x.PackageCard
	}
	return nil
}

type BookingValidateReply_PackageCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IsValid       bool   `protobuf:"varint,2,opt,name=isValid,proto3" json:"isValid,omitempty"`
	InvalidCode   int32  `protobuf:"varint,3,opt,name=invalidCode,proto3" json:"invalidCode,omitempty"`
	Reason        string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	BookingMinute int32  `protobuf:"varint,5,opt,name=bookingMinute,proto3" json:"bookingMinute,omitempty"`
	BookingDay    int32  `protobuf:"varint,6,opt,name=bookingDay,proto3" json:"bookingDay,omitempty"`
}

func (x *BookingValidateReply_PackageCard) Reset() {
	*x = BookingValidateReply_PackageCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingValidateReply_PackageCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingValidateReply_PackageCard) ProtoMessage() {}

func (x *BookingValidateReply_PackageCard) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingValidateReply_PackageCard.ProtoReflect.Descriptor instead.
func (*BookingValidateReply_PackageCard) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{24, 1}
}

func (x *BookingValidateReply_PackageCard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BookingValidateReply_PackageCard) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *BookingValidateReply_PackageCard) GetInvalidCode() int32 {
	if x != nil {
		return x.InvalidCode
	}
	return 0
}

func (x *BookingValidateReply_PackageCard) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BookingValidateReply_PackageCard) GetBookingMinute() int32 {
	if x != nil {
		return x.BookingMinute
	}
	return 0
}

func (x *BookingValidateReply_PackageCard) GetBookingDay() int32 {
	if x != nil {
		return x.BookingDay
	}
	return 0
}

type BookingGenSharekDataReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *BookingGenSharekDataReply_Data) Reset() {
	*x = BookingGenSharekDataReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_seat_v1_seat_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookingGenSharekDataReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookingGenSharekDataReply_Data) ProtoMessage() {}

func (x *BookingGenSharekDataReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_seat_v1_seat_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookingGenSharekDataReply_Data.ProtoReflect.Descriptor instead.
func (*BookingGenSharekDataReply_Data) Descriptor() ([]byte, []int) {
	return file_seat_v1_seat_proto_rawDescGZIP(), []int{25, 0}
}

func (x *BookingGenSharekDataReply_Data) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_seat_v1_seat_proto protoreflect.FileDescriptor

var file_seat_v1_seat_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x0d, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x75, 0x0a,
	0x0b, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0x92, 0x41, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x58, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x61, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x67, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x90,
	0x04, 0x0a, 0x0d, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xa3, 0x03, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x53, 0x65,
	0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x79, 0x70, 0x65, 0x53, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72,
	0x65, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x72, 0x65, 0x61,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x70, 0x41, 0x72, 0x65, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x22, 0xc9, 0x02, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x75, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xeb, 0x01,
	0x0a, 0x07, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x12,
	0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x64, 0x44, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf8, 0x04, 0x0a, 0x0e,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x45, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x45, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f,
	0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x55, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6e, 0x6f, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x55, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x13,
	0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x54, 0x6f, 0x55, 0x73, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x57,
	0x65, 0x65, 0x6b, 0x18, 0x11, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x57, 0x65, 0x65, 0x6b, 0x22, 0x56, 0x0a, 0x18, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0x7f,
	0x0a, 0x15, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x12, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x22,
	0x58, 0x0a, 0x1a, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x72, 0x0a, 0x16, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x61, 0x0a,
	0x19, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f,
	0x6f, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x0c, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe0, 0x03, 0x0a, 0x14, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xab, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4f,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x1a,
	0xb7, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4d, 0x69,
	0x6e, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x22, 0xa0, 0x01, 0x0a, 0x19, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1c,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a, 0x16,
	0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x6f,
	0x6f, 0x72, 0x22, 0x33, 0x0a, 0x19, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x32, 0xf9, 0x15, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74,
	0x12, 0x3e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x73, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b, 0x92, 0x41, 0x1e, 0x12, 0x0c, 0xe8,
	0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0xba, 0xa7, 0xe4, 0xbd, 0x8d, 0x1a, 0x0e, 0xe6, 0xa0, 0xb9,
	0xe6, 0x8d, 0xae, 0x69, 0x64, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x14, 0x12, 0x12, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x74,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x81, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x47, 0x92, 0x41, 0x2f, 0x12, 0x15, 0xe8, 0x87, 0xaa, 0xe5, 0xae, 0x9a, 0xe4, 0xb9, 0x89,
	0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0xba, 0xa7, 0xe4, 0xbd, 0x8d, 0x1a, 0x16, 0xe6, 0xa0,
	0xb9, 0xe6, 0x8d, 0xae, 0xe5, 0xad, 0x97, 0xe6, 0xae, 0xb5, 0x2d, 0xe5, 0x80, 0xbc, 0xe8, 0x8e,
	0xb7, 0xe5, 0x8f, 0x96, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x73, 0x65, 0x61,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6e, 0x64, 0x12, 0x74, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x3a, 0x92, 0x41, 0x22, 0x12, 0x12, 0xe8, 0x8e, 0xb7, 0xe5, 0x8f, 0x96,
	0xe5, 0xba, 0xa7, 0xe4, 0xbd, 0x8d, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x1a, 0x0c, 0xe8, 0x8e,
	0xb7, 0xe5, 0x8f, 0x96, 0xe5, 0x85, 0xa8, 0xe9, 0x83, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x12, 0x0d, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x80, 0x01, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x42,
	0x92, 0x41, 0x28, 0x12, 0x12, 0xe6, 0x90, 0x9c, 0xe7, 0xb4, 0xa2, 0xe5, 0xba, 0xa7, 0xe4, 0xbd,
	0x8d, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x1a, 0x12, 0xe6, 0xa0, 0xb9, 0xe6, 0x8d, 0xae, 0xe5,
	0xad, 0x97, 0xe6, 0xae, 0xb5, 0xe6, 0x90, 0x9c, 0xe7, 0xb4, 0xa2, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x8a, 0x01, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x44, 0x92, 0x41, 0x28, 0x12, 0x12,
	0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe5, 0xba, 0xa7, 0xe4, 0xbd, 0x8d, 0xe9, 0xa2, 0x84, 0xe8,
	0xa7, 0x88, 0x1a, 0x12, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe5, 0xba, 0xa7, 0xe4, 0xbd, 0x8d,
	0xe9, 0xa2, 0x84, 0xe8, 0xa7, 0x88, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x73,
	0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x96, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x43, 0x92, 0x41, 0x1c, 0x12, 0x0c, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7,
	0xe6, 0xa0, 0xa1, 0xe9, 0xaa, 0x8c, 0x1a, 0x0c, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe6, 0xa0,
	0xa1, 0xe9, 0xaa, 0x8c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f,
	0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x71, 0x0a, 0x07, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x92, 0x41, 0x10,
	0x12, 0x06, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0x1a, 0x06, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x73, 0x65, 0x61, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x91, 0x01, 0x0a, 0x11,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x3a, 0x92, 0x41, 0x10, 0x12, 0x06, 0xe6, 0x8d, 0xa2, 0xe5, 0xba, 0xa7,
	0x1a, 0x06, 0xe6, 0x8d, 0xa2, 0xe5, 0xba, 0xa7, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01,
	0x2a, 0x22, 0x1c, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x74, 0x12,
	0xa0, 0x01, 0x0a, 0x0e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x4f, 0x92, 0x41, 0x28, 0x12, 0x12, 0xe5, 0xbb, 0xb6, 0xe9, 0x95, 0xbf, 0xe8, 0xae,
	0xa2, 0xe5, 0xba, 0xa7, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x1a, 0x12, 0xe5, 0xbb, 0xb6, 0xe9,
	0x95, 0xbf, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0xca, 0x01, 0x0a, 0x13, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6f,
	0x92, 0x41, 0x43, 0x12, 0x12, 0xe6, 0x9b, 0xb4, 0xe6, 0x94, 0xb9, 0xe8, 0xae, 0xa2, 0xe5, 0xba,
	0xa7, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x1a, 0x2d, 0xe6, 0x9b, 0xb4, 0xe6, 0x94, 0xb9, 0xe8,
	0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0xef, 0xbc, 0x9b, 0xe5, 0x8f,
	0x96, 0xe6, 0xb6, 0x88, 0xef, 0xbc, 0x8c, 0xe5, 0x85, 0xa5, 0xe5, 0xba, 0xa7, 0xef, 0xbc, 0x8c,
	0xe7, 0xbb, 0x93, 0xe6, 0x9d, 0x9f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22,
	0x1e, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x8b, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x44,
	0x6f, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x38, 0x92, 0x41, 0x10, 0x12, 0x06, 0xe5, 0xbc, 0x80, 0xe9, 0x97, 0xa8,
	0x1a, 0x06, 0xe5, 0xbc, 0x80, 0xe9, 0x97, 0xa8, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01,
	0x2a, 0x22, 0x1a, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x12, 0x9c, 0x01,
	0x0a, 0x13, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x42, 0x92, 0x41, 0x16, 0x12, 0x09, 0xe5,
	0xbc, 0x80, 0xe5, 0x85, 0xb3, 0xe7, 0x81, 0xaf, 0x1a, 0x09, 0xe5, 0xbc, 0x80, 0xe5, 0x85, 0xb3,
	0xe7, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x73,
	0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0xc4, 0x01, 0x0a,
	0x14, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x68, 0x61, 0x72, 0x65, 0x47, 0x65, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x47, 0x65, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x6b, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5c, 0x92, 0x41, 0x2e, 0x12, 0x15, 0xe5, 0x88, 0x9b, 0xe5,
	0xbb, 0xba, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe5, 0x88, 0x86, 0xe4, 0xba, 0xab, 0xe7, 0xa0,
	0x81, 0x1a, 0x15, 0xe5, 0x88, 0x9b, 0xe5, 0xbb, 0xba, 0xe8, 0xae, 0xa2, 0xe5, 0xba, 0xa7, 0xe5,
	0x88, 0x86, 0xe4, 0xba, 0xab, 0xe7, 0xa0, 0x81, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01,
	0x2a, 0x22, 0x20, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x67, 0x65, 0x6e, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0xa4, 0x01, 0x0a, 0x15, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4b, 0x92,
	0x41, 0x1c, 0x12, 0x0c, 0xe5, 0x85, 0xb1, 0xe4, 0xba, 0xab, 0xe5, 0xbc, 0x80, 0xe9, 0x97, 0xa8,
	0x1a, 0x0c, 0xe5, 0x85, 0xb1, 0xe4, 0xba, 0xab, 0xe5, 0xbc, 0x80, 0xe9, 0x97, 0xa8, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64,
	0x6f, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0xb5, 0x01, 0x0a, 0x19, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x55, 0x92, 0x41, 0x22,
	0x12, 0x0f, 0xe5, 0x85, 0xb1, 0xe4, 0xba, 0xab, 0xe5, 0xbc, 0x80, 0xe5, 0x85, 0xb3, 0xe7, 0x81,
	0xaf, 0x1a, 0x0f, 0xe5, 0x85, 0xb1, 0xe4, 0xba, 0xab, 0xe5, 0xbc, 0x80, 0xe5, 0x85, 0xb3, 0xe7,
	0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x73, 0x65,
	0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x12, 0x9d, 0x01, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x65, 0x6e, 0x44, 0x6f, 0x6f, 0x72, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x6e,
	0x44, 0x6f, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4a, 0x92, 0x41, 0x22, 0x12, 0x0f, 0xe9, 0x94, 0x81,
	0xe4, 0xbd, 0x8d, 0xef, 0xbc, 0x8c, 0xe5, 0xbc, 0x80, 0xe9, 0x97, 0xa8, 0x1a, 0x0f, 0xe9, 0x94,
	0x81, 0xe4, 0xbd, 0x8d, 0xef, 0xbc, 0x8c, 0xe5, 0xbc, 0x80, 0xe9, 0x97, 0xa8, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a, 0x22, 0x1a, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x6f,
	0x6f, 0x72, 0x12, 0xae, 0x01, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x54, 0x92,
	0x41, 0x28, 0x12, 0x12, 0xe9, 0x94, 0x81, 0xe4, 0xbd, 0x8d, 0xef, 0xbc, 0x8c, 0xe5, 0xbc, 0x80,
	0xe5, 0x85, 0xb3, 0xe7, 0x81, 0xaf, 0x1a, 0x12, 0xe9, 0x94, 0x81, 0xe4, 0xbd, 0x8d, 0xef, 0xbc,
	0x8c, 0xe5, 0xbc, 0x80, 0xe5, 0x85, 0xb3, 0xe7, 0x81, 0xaf, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23,
	0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f,
	0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x2b, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x61, 0x74, 0x2e,
	0x76, 0x31, 0x50, 0x01, 0x5a, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x52, 0x6f, 0x6f, 0x6d, 0x47,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_seat_v1_seat_proto_rawDescOnce sync.Once
	file_seat_v1_seat_proto_rawDescData = file_seat_v1_seat_proto_rawDesc
)

func file_seat_v1_seat_proto_rawDescGZIP() []byte {
	file_seat_v1_seat_proto_rawDescOnce.Do(func() {
		file_seat_v1_seat_proto_rawDescData = protoimpl.X.CompressGZIP(file_seat_v1_seat_proto_rawDescData)
	})
	return file_seat_v1_seat_proto_rawDescData
}

var file_seat_v1_seat_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_seat_v1_seat_proto_goTypes = []interface{}{
	(*CreateRequest)(nil),                    // 0: api.seat.v1.CreateRequest
	(*CreateReply)(nil),                      // 1: api.seat.v1.CreateReply
	(*UpdateRequest)(nil),                    // 2: api.seat.v1.UpdateRequest
	(*UpdateReply)(nil),                      // 3: api.seat.v1.UpdateReply
	(*DeleteRequest)(nil),                    // 4: api.seat.v1.DeleteRequest
	(*DeleteReply)(nil),                      // 5: api.seat.v1.DeleteReply
	(*GetRequest)(nil),                       // 6: api.seat.v1.GetRequest
	(*FindRequest)(nil),                      // 7: api.seat.v1.FindRequest
	(*ListRequest)(nil),                      // 8: api.seat.v1.ListRequest
	(*SearchRequest)(nil),                    // 9: api.seat.v1.SearchRequest
	(*DataReply)(nil),                        // 10: api.seat.v1.DataReply
	(*ListReply)(nil),                        // 11: api.seat.v1.ListReply
	(*Data)(nil),                             // 12: api.seat.v1.Data
	(*OverviewRequest)(nil),                  // 13: api.seat.v1.OverviewRequest
	(*OverviewReply)(nil),                    // 14: api.seat.v1.OverviewReply
	(*Booking)(nil),                          // 15: api.seat.v1.Booking
	(*Locking)(nil),                          // 16: api.seat.v1.Locking
	(*BookingRequest)(nil),                   // 17: api.seat.v1.BookingRequest
	(*BookingChangeSeatRequest)(nil),         // 18: api.seat.v1.BookingChangeSeatRequest
	(*BookingAddTimeRequest)(nil),            // 19: api.seat.v1.BookingAddTimeRequest
	(*BookingChangeStatusRequest)(nil),       // 20: api.seat.v1.BookingChangeStatusRequest
	(*BookingOpenDoorRequest)(nil),           // 21: api.seat.v1.BookingOpenDoorRequest
	(*BookingControlSeatRequest)(nil),        // 22: api.seat.v1.BookingControlSeatRequest
	(*BookingReply)(nil),                     // 23: api.seat.v1.BookingReply
	(*BookingValidateReply)(nil),             // 24: api.seat.v1.BookingValidateReply
	(*BookingGenSharekDataReply)(nil),        // 25: api.seat.v1.BookingGenSharekDataReply
	(*LockingOpenDoorRequest)(nil),           // 26: api.seat.v1.LockingOpenDoorRequest
	(*LockingControlSeatRequest)(nil),        // 27: api.seat.v1.LockingControlSeatRequest
	(*OverviewReply_Data)(nil),               // 28: api.seat.v1.OverviewReply.Data
	(*BookingValidateReply_Data)(nil),        // 29: api.seat.v1.BookingValidateReply.Data
	(*BookingValidateReply_PackageCard)(nil), // 30: api.seat.v1.BookingValidateReply.PackageCard
	(*BookingGenSharekDataReply_Data)(nil),   // 31: api.seat.v1.BookingGenSharekDataReply.Data
}
var file_seat_v1_seat_proto_depIdxs = []int32{
	12, // 0: api.seat.v1.DataReply.data:type_name -> api.seat.v1.Data
	12, // 1: api.seat.v1.ListReply.data:type_name -> api.seat.v1.Data
	15, // 2: api.seat.v1.Data.booking:type_name -> api.seat.v1.Booking
	16, // 3: api.seat.v1.Data.locking:type_name -> api.seat.v1.Locking
	28, // 4: api.seat.v1.OverviewReply.data:type_name -> api.seat.v1.OverviewReply.Data
	29, // 5: api.seat.v1.BookingValidateReply.data:type_name -> api.seat.v1.BookingValidateReply.Data
	31, // 6: api.seat.v1.BookingGenSharekDataReply.data:type_name -> api.seat.v1.BookingGenSharekDataReply.Data
	15, // 7: api.seat.v1.OverviewReply.Data.booking:type_name -> api.seat.v1.Booking
	16, // 8: api.seat.v1.OverviewReply.Data.locking:type_name -> api.seat.v1.Locking
	30, // 9: api.seat.v1.BookingValidateReply.Data.packageCard:type_name -> api.seat.v1.BookingValidateReply.PackageCard
	0,  // 10: api.seat.v1.Seat.Create:input_type -> api.seat.v1.CreateRequest
	2,  // 11: api.seat.v1.Seat.Update:input_type -> api.seat.v1.UpdateRequest
	4,  // 12: api.seat.v1.Seat.Delete:input_type -> api.seat.v1.DeleteRequest
	6,  // 13: api.seat.v1.Seat.Get:input_type -> api.seat.v1.GetRequest
	7,  // 14: api.seat.v1.Seat.Find:input_type -> api.seat.v1.FindRequest
	8,  // 15: api.seat.v1.Seat.List:input_type -> api.seat.v1.ListRequest
	9,  // 16: api.seat.v1.Seat.Search:input_type -> api.seat.v1.SearchRequest
	13, // 17: api.seat.v1.Seat.Overview:input_type -> api.seat.v1.OverviewRequest
	17, // 18: api.seat.v1.Seat.BookingValidate:input_type -> api.seat.v1.BookingRequest
	17, // 19: api.seat.v1.Seat.Booking:input_type -> api.seat.v1.BookingRequest
	18, // 20: api.seat.v1.Seat.BookingChangeSeat:input_type -> api.seat.v1.BookingChangeSeatRequest
	19, // 21: api.seat.v1.Seat.BookingAddTime:input_type -> api.seat.v1.BookingAddTimeRequest
	20, // 22: api.seat.v1.Seat.BookingChangeStatus:input_type -> api.seat.v1.BookingChangeStatusRequest
	21, // 23: api.seat.v1.Seat.BookingOpenDoor:input_type -> api.seat.v1.BookingOpenDoorRequest
	22, // 24: api.seat.v1.Seat.BookingControlLight:input_type -> api.seat.v1.BookingControlSeatRequest
	22, // 25: api.seat.v1.Seat.BookingShareGenToken:input_type -> api.seat.v1.BookingControlSeatRequest
	21, // 26: api.seat.v1.Seat.BookingOpenDoorShared:input_type -> api.seat.v1.BookingOpenDoorRequest
	22, // 27: api.seat.v1.Seat.BookingControlLightShared:input_type -> api.seat.v1.BookingControlSeatRequest
	26, // 28: api.seat.v1.Seat.LockingOpenDoor:input_type -> api.seat.v1.LockingOpenDoorRequest
	27, // 29: api.seat.v1.Seat.LockingControlLight:input_type -> api.seat.v1.LockingControlSeatRequest
	1,  // 30: api.seat.v1.Seat.Create:output_type -> api.seat.v1.CreateReply
	3,  // 31: api.seat.v1.Seat.Update:output_type -> api.seat.v1.UpdateReply
	5,  // 32: api.seat.v1.Seat.Delete:output_type -> api.seat.v1.DeleteReply
	10, // 33: api.seat.v1.Seat.Get:output_type -> api.seat.v1.DataReply
	10, // 34: api.seat.v1.Seat.Find:output_type -> api.seat.v1.DataReply
	11, // 35: api.seat.v1.Seat.List:output_type -> api.seat.v1.ListReply
	11, // 36: api.seat.v1.Seat.Search:output_type -> api.seat.v1.ListReply
	14, // 37: api.seat.v1.Seat.Overview:output_type -> api.seat.v1.OverviewReply
	24, // 38: api.seat.v1.Seat.BookingValidate:output_type -> api.seat.v1.BookingValidateReply
	23, // 39: api.seat.v1.Seat.Booking:output_type -> api.seat.v1.BookingReply
	23, // 40: api.seat.v1.Seat.BookingChangeSeat:output_type -> api.seat.v1.BookingReply
	23, // 41: api.seat.v1.Seat.BookingAddTime:output_type -> api.seat.v1.BookingReply
	23, // 42: api.seat.v1.Seat.BookingChangeStatus:output_type -> api.seat.v1.BookingReply
	23, // 43: api.seat.v1.Seat.BookingOpenDoor:output_type -> api.seat.v1.BookingReply
	23, // 44: api.seat.v1.Seat.BookingControlLight:output_type -> api.seat.v1.BookingReply
	25, // 45: api.seat.v1.Seat.BookingShareGenToken:output_type -> api.seat.v1.BookingGenSharekDataReply
	23, // 46: api.seat.v1.Seat.BookingOpenDoorShared:output_type -> api.seat.v1.BookingReply
	23, // 47: api.seat.v1.Seat.BookingControlLightShared:output_type -> api.seat.v1.BookingReply
	23, // 48: api.seat.v1.Seat.LockingOpenDoor:output_type -> api.seat.v1.BookingReply
	23, // 49: api.seat.v1.Seat.LockingControlLight:output_type -> api.seat.v1.BookingReply
	30, // [30:50] is the sub-list for method output_type
	10, // [10:30] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_seat_v1_seat_proto_init() }
func file_seat_v1_seat_proto_init() {
	if File_seat_v1_seat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_seat_v1_seat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Booking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Locking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingChangeSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingAddTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingChangeStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingOpenDoorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingControlSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingValidateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingGenSharekDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockingOpenDoorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockingControlSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingValidateReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingValidateReply_PackageCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_seat_v1_seat_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookingGenSharekDataReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_seat_v1_seat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_seat_v1_seat_proto_goTypes,
		DependencyIndexes: file_seat_v1_seat_proto_depIdxs,
		MessageInfos:      file_seat_v1_seat_proto_msgTypes,
	}.Build()
	File_seat_v1_seat_proto = out.File
	file_seat_v1_seat_proto_rawDesc = nil
	file_seat_v1_seat_proto_goTypes = nil
	file_seat_v1_seat_proto_depIdxs = nil
}
