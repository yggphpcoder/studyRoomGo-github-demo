syntax = "proto3";

package api.equipment.v1;
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "studyRoomGo/api/equipment/v1;v1";
option java_multiple_files = true;
option java_package = "api.equipment.v1";

service Equipment {
  rpc OpenDoor (GetRequest) returns (DataReply){
    option (google.api.http) = {
      post: "/equipment/v1/openDoor/{id}"
      body:"*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "根据id控制门控设备";
      summary: "";
    };
  };

  rpc Automate (GetRequest) returns (DataReply){
    option (google.api.http) = {
      post: "/equipment/v1/equipment/{id}"
      body:"*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "根据id控制设备";
      summary: "";
    };
  };
  rpc AutomateAll (ListRequest) returns (ListReply){
    option (google.api.http) = {
      post: "/equipment/v1/equipment/shop/{shopId}"
      body:"*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "控制全部设备";
      summary: "";
    };
  };
  rpc AutomateMain (ListRequest) returns (ListReply){
    option (google.api.http) = {
      post: "/equipment/v1/equipment/main/{pId}"
      body:"*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "控制主设备";
      summary: "";
    };
  };
  rpc List (ListRequest) returns (ListReply){
    option (google.api.http) = {
      get: "/equipment/v1/list"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "获取全部";
      summary: "获取设备列表";
    };
  };

  //后台专用
  rpc SeatAutomate (seatAutomateRequest) returns (DataReply){
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "根据座位控制设备";
      summary: "根据座位控制设备";
    };
  };
  rpc DoorAutomate (doorAutomateRequest) returns (DataReply){
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "控制门设备";
      summary: "控制门设备";
    };
  };
  rpc LiverCameraList (ListRequest) returns (LiverCameraListReply){
    option (google.api.http) = {
      get: "/equipment/v1/liverCameraList"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "监控列表";
      summary: "监控列表";
    };
  };
}

message GetRequest {
  int64 id = 1;
  int32 status=2;
}

message DataReply{
  int32 code = 1;
  string msg = 2;
}


message ListRequest {
  int64 shopId=1;
  int64 pId=2;
  int32 status=3;

}
 message seatAutomateRequest{
   int64 seatId=1;
   int32 status=2;
 }

message doorAutomateRequest{
  int64 doorId=1;
}

message ListReply{
  int32 code = 1;
  string msg = 2;
  repeated Data data = 3;
}


message Data{
  int64   id = 1;
  int64   pid = 2;
  string  name = 3;
  int32  typeEquipment=4;
  int32  typeRelate=5;
  int64 relateID=6;
  int32  operation=7;
}

message LiverCameraListReply{
  int32 code = 1;
  string msg = 2;
  repeated LiverCameraData data = 3;
}

message LiverCameraData{
  string   token = 1;
  string   deviceSerial = 2;
  string  channelNo = 3;
  string  channelName = 4;
  string liveAddress=5;
}
